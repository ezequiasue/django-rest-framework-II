# CI (Continuous Integration)

name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:13.0-alpine
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Wait for DB
        run: |
          until pg_isready -h localhost -p 5432; do
            sleep 1
          done

      - name: Run Migrations
        run: |
          poetry run python manage.py migrate

      - name: Run Tests
        run: |
          poetry run pytest

      - name: Run Linting
        run: |
          poetry run flake8

  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker-compose -f docker-compose.yml build
          docker-compose -f docker-compose.yml up -d

      - name: Wait for DB in Docker
        run: |
          docker-compose exec db bash -c "until pg_isready -h localhost -p 5432; do sleep 1; done"

      - name: Run Migrations
        run: |
          docker-compose exec web poetry run python manage.py migrate

      - name: Run Tests
        run: |
          docker-compose exec web poetry run pytest

      - name: Shutdown services
        run: |
          docker-compose down
